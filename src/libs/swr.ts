import useSWR from 'swr'
import { addUrlQueries, replaceUrlPaths } from '@/utils/helpers/apiHelpers'
import type { paths } from '@/types/openapi/autoGenerated'
import type {
  OpenApiPath,
  ParameterProperty,
  PathParameter,
  QueryParameter,
  Response,
} from '@/types/openapi/extractor'
import type { SWRConfiguration } from 'swr'

type OpenApiGetPath = {
  [Key in OpenApiPath]: 'get' extends keyof paths[Key] ? Key : never
}[OpenApiPath]

type OpenApiSWRKey<Path extends OpenApiGetPath> = {
  url: Path
} & ParameterProperty<Path, 'get', PathParameter<Path, 'get'>, 'path'> &
  ParameterProperty<Path, 'get', QueryParameter<Path, 'get'>, 'query'>

/**
 * OpenAPIのエンドポイントをサジェストしてくれたり型情報を返してくれるuseSWRのラッパー
 */
export const useSWROpenApi = <Path extends OpenApiGetPath>(
  key: OpenApiSWRKey<Path> | null,
  options?: SWRConfiguration
) => {
  const composedUrl = key !== null ? composeUrl(key) : null

  return useSWR<Response<Path, 'get'>>(composedUrl, options)
}

/**
 * keyからURLを作成する
 */
const composeUrl = <Path extends OpenApiGetPath>(key: OpenApiSWRKey<Path>) => {
  const { url, path, query } = key
  return addUrlQueries(replaceUrlPaths(url, path), query)
}
