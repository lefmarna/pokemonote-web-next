import axios from 'axios'
import { $axios } from '@/libs/axios'
import type { HttpMethod, RequestBody, Response, UrlPaths } from '@/types'
import type { paths } from '@/types/openapi/autoGenerated'
import type { AxiosResponse } from 'axios'

export type PathParams = {
  [key: string]: string | number | null
}

const replaceUrlParams = (url: string, params?: PathParams) => {
  if (params === undefined) return url

  return Object.entries(params).reduce((accUrl, [key, value]) => {
    if (value === null) return accUrl
    return accUrl.replace(`{${key}}`, value.toString())
  }, url)
}

/**
 * データ取得用API
 */
export const fetchData = async <U extends keyof paths>(
  url: U,
  params?: PathParams
) => {
  const apiUrl = replaceUrlParams(url, params)
  return await $axios.get<Response<U, 'get'>>(apiUrl)
}

type AxiosConfigWrapper<
  Path extends keyof paths,
  Method extends keyof paths[Path] & HttpMethod
> = {
  url: Path
  method: Method
  data?: RequestBody<Path, Method>
}

export const apiRequest = async <
  Path extends keyof paths,
  Method extends keyof paths[Path] & HttpMethod
>(
  config: AxiosConfigWrapper<Path, Method>
) => {
  return await axios.request<
    Response<Path, Method>,
    AxiosResponse<Response<Path, Method>>,
    AxiosConfigWrapper<Path, Method>['data']
  >(config)
}
