name: test_build_deploy
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: node:20.9.0

    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        uses: ./.github/actions/test_build_deploy

      - name: Lint with TypeScript Compiler
        run: npm run lint:ts

      - name: Lint with ESLint
        run: npm run lint:es

      # - name: Test
      #   run: npm run test

  build:
    runs-on: ubuntu-latest
    container:
      image: node:20.9.0
    if: github.ref_name == 'main' || github.ref_name == 'develop'
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Install packages
        uses: ./.github/actions/test_build_deploy

      - name: build cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-nextjs-

      - name: npm run build
        run: npm run build
        env:
          NEXT_PUBLIC_GA_TRACKING_ID: ${{ github.ref_name == 'main' && secrets.PROD_GA_TRACKING_ID || secrets.DEV_GA_TRACKING_ID }}
          NEXT_PUBLIC_FRONTEND_BASE_URL: ${{ github.ref_name == 'main' && secrets.PROD_FRONTEND_BASE_URL || secrets.DEV_FRONTEND_BASE_URL }}
          NEXT_PUBLIC_BACKEND_BASE_URL: ${{ github.ref_name == 'main' && secrets.PROD_BACKEND_BASE_URL || secrets.DEV_BACKEND_BASE_URL }}
          NEXT_PUBLIC_NODE_ENV: ${{ github.ref_name == 'main' && 'develop' || 'develop' }} # 本番リリース時には左辺を'production'に変更する
          NEXT_PUBLIC_PAYJP_PUBLIC_KEY: ${{ secrets.PAYJP_PUBLIC_KEY }}

      - name: Upload Directory
        uses: actions/upload-artifact@v3
        with:
          name: out
          path: out
          retention-days: 3

  deploy:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || github.ref_name == 'develop'
    needs: build
    steps:
      - name: Download math result for job 1
        uses: actions/download-artifact@v3
        with:
          name: out
          path: ./out-dir
      - name: Deploy to XSERVER
        env:
          DEPLOY_DIRECTORY: ${{ github.ref_name == 'main' && secrets.PROD_DIRECTORY || secrets.DEV_DIRECTORY }}
        run: |
          echo "${{ secrets.XSERVER_PRIVATE_KEY }}" > x-server.key
          chmod 600 x-server.key
          EXCLUDED_DIRECTORIES=(${{ secrets.EXCLUDED_DIRECTORIES }})
          EXCLUDED_FILTERS=("--filter=P .htaccess")
          for dir in "${EXCLUDED_DIRECTORIES[@]}"; do
            EXCLUDED_FILTERS+=("--filter=P ${dir}/")
          done
          rsync -avz --delete --delete-delay --delay-updates "${EXCLUDED_FILTERS[@]}" -e "ssh -o StrictHostKeyChecking=no -i x-server.key -p 10022" ./out-dir/ ${{ secrets.XSERVER_USER }}@${{ secrets.XSERVER_HOST }}:$DEPLOY_DIRECTORY
